package com.authorizationService.demo.controller;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import static org.junit.jupiter.api.Assertions.assertEquals;

import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.junit4.SpringRunner;

import com.authorizationService.demo.jwt.JwtRequest;

import jdk.internal.jline.internal.Log;
import lombok.extern.slf4j.Slf4j;

@RunWith(SpringRunner.class)
@SpringBootTest
@Slf4j
@AutoConfigureMockMvc
class UserControllerTest {

	@Test
	public void test1() {
		assertTrue(true);
	}

	UserController userController = new UserController();

	@Mock
	JwtRequest jwtRequest;

	@Test
	public void contextLoads() {
		String s = userController.hello();
		Log.info(s);
		assertEquals("1", "1");
	}

	
	  @Test public void testCreateAuthenticationTokenPositiveCase() throws Exception {
	  log.info("testCreateAuthenticationTokenPositiveCase START"); 
	  String
	  createAuthenticationToken =
	  userController.createAuthenticationToken(jwtRequest);
	  assertNotNull(createAuthenticationToken); assertTrue(true);
	  log.info("testCreateAuthenticationTokenPositiveCase END"); }
	 
}
