package com.authorizationService.demo.controller;


import static org.mockito.Mockito.when;

import java.util.ArrayList;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;

import com.authorizationService.demo.jwt.JwtRequest;
import com.authorizationService.demo.jwt.JwtUtil;

import lombok.extern.slf4j.Slf4j;

//@RunWith(SpringRunner.class)
@SpringBootTest
@Slf4j
//@AutoConfigureMockMvc
class UserControllerTest {

	@InjectMocks
	UserController userController;
	@Mock
	AuthenticationManager authentication;
	@Mock
	UserDetailsService userDetailsService;
	@Mock
	JwtUtil jwtTokenUtil;
	
	@Test
	public void testCreateAuthenticationToken() throws Exception {
		JwtRequest authenticationRequest = new JwtRequest("Sufiyan","1234");
		UserDetails userDetails = new User(authenticationRequest.getUsername(), authenticationRequest.getPassword(), new ArrayList<>());
		when(userDetailsService.loadUserByUsername(authenticationRequest.getUsername()))
				.thenReturn(userDetails);
		when(jwtTokenUtil.generateToken(userDetails))
		.thenReturn("token");
		userController.createAuthenticationToken(authenticationRequest);
	}
	
//	AuthenticationRequest user = new AuthenticationRequest("mayur012", "test12345");
//	UserDetails userDetails = new User(user.getUserName(), user.getPassword(), new ArrayList<>());
//	UserDetails loadUserByUsername = authService.loadUserByUsername("mayur012");
//	when(authService.loadUserByUsername("mayur012")).thenReturn(userDetails);
//	when(jwtUtil.generateToken(loadUserByUsername)).thenReturn("token");
//	ResponseEntity<?> login = authController.createAuthorizationToken(user);
//	assertEquals(200, login.getStatusCodeValue());
	 
}
