<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.mockito.exceptions.misusing.InvalidUseOfMatchersException"/>
    <fullyQualifiedTypeName name="com.medicalRepSchedule.demo.MedicalRepresentativeScheduleApplication"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.DisabledException"/>
    <fullyQualifiedTypeName name="com.authorizationService.demo.controller.UserController"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.BadCredentialsException"/>
    <fullyQualifiedTypeName name="com.authorizationService.demo.jwt.JwtRequest"/>
    <fullyQualifiedTypeName name="com.authorizationService.demo.jwt.JwtResponse"/>
    <fullyQualifiedTypeName name="com.authorizationService.demo.repositories.UserRepository"/>
    <fullyQualifiedTypeName name="java.lang.AssertionError"/>
    <fullyQualifiedTypeName name="com.authorizationService.demo.jwt.MyUserDetails"/>
    <fullyQualifiedTypeName name="com.authorizationService.demo.service.UserService"/>
    <fullyQualifiedTypeName name="com.authorizationService.demo.jwt.MyUserDetailsService"/>
    <fullyQualifiedTypeName name="javassist.bytecode.stackmap.BasicBlock.Catch"/>
    <fullyQualifiedTypeName name="jdk.internal.net.http.common.Log"/>
    <fullyQualifiedTypeName name="jdk.internal.jline.internal.Log"/>
    <fullyQualifiedTypeName name="lombok.extern.java.Log"/>
    <fullyQualifiedTypeName name="com.authorizationService.demo.model.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UsernameNotFoundException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Claims"/>
    <fullyQualifiedTypeName name="java.util.function.Function"/>
    <fullyQualifiedTypeName name="com.authorizationService.demo.util.JwtRequestFilter"/>
    <fullyQualifiedTypeName name="com.authorizationService.demo.jwt.JwtUtil"/>
    <fullyQualifiedTypeName name="com.pharmacyMedicineSupply.demo.PharmacyMedicineSupplyApplication"/>
    <fullyQualifiedTypeName name="com.pharmacyMedicineSupply.demo.vo.MedicineStockVOTest"/>
    <fullyQualifiedTypeName name="java.time.LocalDate"/>
    <fullyQualifiedTypeName name="com.pharmacyMedicineSupply.demo.feinClient.MedicineStockClient"/>
    <fullyQualifiedTypeName name="com.pharmacyMedicineSupply.demo.repository.PharmacyMedicineSupplyRepo"/>
    <fullyQualifiedTypeName name="com.pharmacyMedicineSupply.demo.repository.PharmaciesRepo"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="com.pharmacyMedicineSupply.demo.model.Pharmacies"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="com.pharmacyMedicineSupply.demo.vo.MedicineStockVO"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Assertions"/>
    <fullyQualifiedTypeName name="com.pharmacyMedicineSupply.demo.exception.MedicineNotFoundException"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="com.pharmacyMedicineSupply.demo.model.MedicineDemand"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.hibernate.service.spi.InjectService"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.context.SpringBootTest"/>
    <fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
    <fullyQualifiedTypeName name="com.pharmacyMedicineSupply.demo.model.PharmacyMedicineSupply"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="javax.persistence.Entity"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ResponseBody"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="com.demoh2.demo.UserRepo"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="javax.persistence.Id"/>
    <fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
    <fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
</qualifiedTypeNameHistroy>
